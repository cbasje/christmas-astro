---
import { actions } from "astro:actions";
import { capitaliseString } from "@lib/utils";
import type { Group } from "src/db/schema/auth";

const { pathname } = Astro.url;
const group =
    (Astro.url.searchParams.get("group") as Group) ??
    Astro.locals.user?.groups?.at(0);

const possibleGroups = Astro.locals.user ? Astro.locals.user.groups : [];

type Link = {
    label: string;
    path: `/${string}`;
};
const links: Link[] = [
    { label: "Home", path: "/" },
    { label: "Wish list", path: "/wish-list" },
    { label: "Ideas", path: "/ideas" },
    { label: "Size Chart", path: "/size-chart" },
    { label: "Secret Santa", path: "/secret-santa" },
];
---

<ul>
    {
        links.map((l) => (
            <li>
                <a
                    href={l.path + "?group=" + group}
                    aria-current={pathname === l.path ? "page" : undefined}
                >
                    {l.label}
                </a>
            </li>
        ))
    }

    {
        possibleGroups.length > 1 && (
            <li>
                {possibleGroups.map((g) => {
                    const href = Astro.url;
                    href.searchParams.set("group", g);

                    return (
                        <a
                            href={href}
                            aria-current={group === g ? "page" : undefined}
                        >
                            {capitaliseString(g)}
                        </a>
                    );
                })}
            </li>
        )
    }

    <li>
        <form method="POST" action={"/login" + actions.logout}>
            <button type="submit">Sign out</button>
        </form>
    </li>
</ul>
