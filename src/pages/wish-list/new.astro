---
import { actions, isInputError } from "astro:actions";
import { Groups } from "src/db/schema/auth";
import LinkInput from "../../components/LinkInput.svelte";
import Menu from "../../components/Menu.astro";
import Layout from "../../layouts/Layout.astro";
import { capitaliseString } from "../../lib/utils";

if (Astro.locals.user === null || Astro.locals.session === null) {
    return Astro.redirect("/login");
}

const result = Astro.getActionResult(actions.newWishList);
const inputErrors = isInputError(result?.error) ? result.error.fields : {};
---

<Layout title="Christmas">
    <Menu transition:persist />

    <main>
        <h1>New item</h1>

        <form method="POST" action={"/wish-list" + actions.newWishList}>
            <LinkInput {inputErrors} transition:persist client:idle />

            <div>
                <label for="form-login.price">Price</label>
                <input
                    transition:persist
                    type="text"
                    name="price"
                    autocomplete="transaction-amount"
                />
                {
                    inputErrors.price && (
                        <p id="error">{inputErrors.price.join(",")}</p>
                    )
                }
            </div>

            <div>
                {
                    Astro.locals.user.groups &&
                        Astro.locals.user.groups.length > 1 && (
                            <>
                                <label for="form-login.groups">Groups</label>
                                <select
                                    multiple
                                    transition:persist
                                    name="groups"
                                    required
                                >
                                    {Groups.map((g) => (
                                        <option value={g}>
                                            {capitaliseString(g)}
                                        </option>
                                    ))}
                                </select>
                                {inputErrors.link && (
                                    <p id="error">
                                        {inputErrors.link.join(",")}
                                    </p>
                                )}
                            </>
                        )
                }
            </div>

            <button type="submit">Submit</button>

            {
                result?.error && (
                    <p id="form-login.error">
                        Unable to submit. Please try again later.
                    </p>
                )
            }
        </form>
    </main>
</Layout>

<style>
    form {
        display: flex;
        flex-direction: column;
        gap: 1rem;

        > div,
        > :global(astro-island > div) {
            display: flex;
            flex-direction: column;
        }
    }
</style>
